# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ride_sharing_pb2 as ride__sharing__pb2


class RideSharingStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUserLocation = channel.unary_unary(
                '/ridesharing.RideSharing/GetUserLocation',
                request_serializer=ride__sharing__pb2.Point.SerializeToString,
                response_deserializer=ride__sharing__pb2.User.FromString,
                )
        self.ListFeatures = channel.unary_stream(
                '/ridesharing.RideSharing/ListFeatures',
                request_serializer=ride__sharing__pb2.Rectangle.SerializeToString,
                response_deserializer=ride__sharing__pb2.Feature.FromString,
                )
        self.BookingResponse = channel.unary_unary(
                '/ridesharing.RideSharing/BookingResponse',
                request_serializer=ride__sharing__pb2.MessageStream.SerializeToString,
                response_deserializer=ride__sharing__pb2.MessageResponse.FromString,
                )
        self.FinishedBooking = channel.unary_unary(
                '/ridesharing.RideSharing/FinishedBooking',
                request_serializer=ride__sharing__pb2.MessageStream.SerializeToString,
                response_deserializer=ride__sharing__pb2.MessageResponse.FromString,
                )


class RideSharingServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUserLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFeatures(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BookingResponse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinishedBooking(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RideSharingServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUserLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserLocation,
                    request_deserializer=ride__sharing__pb2.Point.FromString,
                    response_serializer=ride__sharing__pb2.User.SerializeToString,
            ),
            'ListFeatures': grpc.unary_stream_rpc_method_handler(
                    servicer.ListFeatures,
                    request_deserializer=ride__sharing__pb2.Rectangle.FromString,
                    response_serializer=ride__sharing__pb2.Feature.SerializeToString,
            ),
            'BookingResponse': grpc.unary_unary_rpc_method_handler(
                    servicer.BookingResponse,
                    request_deserializer=ride__sharing__pb2.MessageStream.FromString,
                    response_serializer=ride__sharing__pb2.MessageResponse.SerializeToString,
            ),
            'FinishedBooking': grpc.unary_unary_rpc_method_handler(
                    servicer.FinishedBooking,
                    request_deserializer=ride__sharing__pb2.MessageStream.FromString,
                    response_serializer=ride__sharing__pb2.MessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ridesharing.RideSharing', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RideSharing(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUserLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ridesharing.RideSharing/GetUserLocation',
            ride__sharing__pb2.Point.SerializeToString,
            ride__sharing__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFeatures(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ridesharing.RideSharing/ListFeatures',
            ride__sharing__pb2.Rectangle.SerializeToString,
            ride__sharing__pb2.Feature.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BookingResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ridesharing.RideSharing/BookingResponse',
            ride__sharing__pb2.MessageStream.SerializeToString,
            ride__sharing__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FinishedBooking(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ridesharing.RideSharing/FinishedBooking',
            ride__sharing__pb2.MessageStream.SerializeToString,
            ride__sharing__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
